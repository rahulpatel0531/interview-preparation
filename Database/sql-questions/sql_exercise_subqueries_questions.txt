
1.  From the following tables, write a SQL query to find all the orders issued by the salesman 'Paul Adam'. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

		select * from Orders
		where salesman_id = (select salesman_id from Salesman where name = 'Paul Adam')
		
		
2.  From the following tables write a SQL query to find all orders generated by London-based salespeople. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

		SELECT *
		FROM orders
		WHERE salesman_id =
				(SELECT salesman_id 
				 FROM salesman 
				 WHERE name='Paul Adam');
				 
				 
3.  From the following tables write a SQL query to find all orders generated by the salespeople who may work for customers whose id is 3007. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

		SELECT * FROM Orders WHERE salesman_id = (SELECT salesman_id FROM Orders WHERE customer_id = '3007')
		
		
		
4.  From the following tables write a SQL query to find the order values greater than the average order value of 10th October 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

		SELECT * FROM Orders WHERE purch_amt > (SELECT AVG(purch_amt) FROM Orders WHERE ord_date = '10/10/2012')
		
		
5. 	From the following tables, write a SQL query to find all the orders generated in New York city. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.	

		SELECT *
		FROM orders
		WHERE salesman_id IN
					(SELECT salesman_id 
					 FROM salesman 
					 WHERE city ='New York');
					 
					 
6. From the following tables write a SQL query to determine the commission of the salespeople in Paris. Return commission.

		SELECT commission FROM Salesman WHERE salesman_id IN ( SELECT salesman_id FROM Customer WHERE city = 'Paris' )
		
		
7. Write a query to display all the customers whose ID is 2001 below the salesperson ID of Mc Lyon.

		SELECT * FROM Customer WHERE customer_id IN (SELECT salesman_id - 2001 FROM Salesman WHERE name = 'Mc Lyon')
		
		
8.  From the following tables write a SQL query to count the number of customers with grades above the average in New York City. Return grade and count.  		

		SELECT count(*) , grade FROM customer GROUP BY grade HAVING grade  > (SELECT AVG(grade) FROM Customer WHERE city = 'New York') 
		
		OR

		SELECT count(*) , grade FROM customer WHERE  grade  > (SELECT AVG(grade) FROM Customer WHERE city = 'New York')  GROUP BY grade 
		

9. 	From the following tables, write a SQL query to find those salespeople who earned the maximum commission. Return ord_no, purch_amt, ord_date, and salesman_id.	


		SELECT ord_no, purch_amt, ord_date, salesman_id 
		FROM orders 
		WHERE salesman_id IN(
		SELECT salesman_id 
		FROM salesman
		WHERE commission = (
		SELECT MAX(commission) 
		FROM salesman));


10. From the following tables write SQL query to find the customers who placed orders on 17th August 2012. Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.

		SELECT o.*, c.cust_name FROM Orders o, Customer c 
		WHERE c.customer_id = o.customer_id
		AND o.ord_date = '2012-08-17'
		
		
11. From the following tables write a SQL query to find salespeople who had more than one customer. Return salesman_id and name.
		
		SELECT salesman_id,name 
		FROM salesman a
		where 1 < (select count(*)
		from customer
		where salesman_id = a.salesman_id)

	
		OR
			SELECT c.salesman_id FROM Customer c
			JOIN Salesman ON Salesman.salesman_id = c.salesman_id
			GROUP BY c.salesman_id
			HAVING COUNT(c.salesman_id) > 1
		
		
12. From the following tables write a SQL query to find those orders, which are higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.	

		SELECT * FROM Orders a WHERE purch_amt > ( SELECT AVG(purch_amt) FROM Orders b WHERE a.salesman_id = b.salesman_id)
		
		
13. From the following tables write a SQL query to find those orders that are equal or higher than the average amount of the orders. Return ord_no, purch_amt, ord_date, customer_id and salesman_id.	

		SELECT * FROM Orders a WHERE purch_amt >= ( SELECT AVG(purch_amt) FROM Orders b WHERE a.customer_id= b.customer_id)
		
	
14. Write a query to find the sums of the amounts from the orders table, grouped by date, and eliminate all dates where the sum was not at least 1000.00 above the maximum order amount for that date.

		SELECT SUM(purch_amt), ord_date  FROM Orders a
		GROUP BY ord_date
		HAVING SUM(purch_amt) > ( select MAX(purch_amt) + 1000 FROM Orders b WHERE a.ord_date = b.ord_date)
		
		
15. Write a query to extract all data from the customer table if and only if one or more of the customers in the customer table are located in London.

			SELECT * FROM Customer WHERE 1 <= (SELECT COUNT(city) FROM Customer WHERE city= 'London')
			
			OR
			
			SELECT customer_id,cust_name, city
			FROM customer
			WHERE EXISTS
			   (SELECT *
				FROM customer 
				WHERE city='London');
				
				
16. From the following tables write a SQL query to find salespeople who deal with multiple customers. Return salesman_id, name, city and commission.	

			select salesman_id, name, city, commission 
			from Salesman
			where salesman_id IN (
				   select salesman_id 
				   from Customer 
				   group by salesman_id
			having count(salesman_id) > 1)
			
			OR
			
			SELECT * 
			FROM salesman 
			WHERE salesman_id IN (
			   SELECT DISTINCT salesman_id 
			   FROM customer a 
			   WHERE EXISTS (
				  SELECT * 
				  FROM customer b 
				  WHERE b.salesman_id=a.salesman_id 
				  AND b.cust_name<>a.cust_name));
				  
				
17. From the following tables write a SQL query to find salespeople who deal with a single customer. Return salesman_id, name, city and commission		

		select * from Salesman
		where salesman_id IN (select salesman_id from Customer group by salesman_id  having  count(salesman_id) = 1)
		
		OR
		
		SELECT * 
		FROM salesman 
		WHERE salesman_id IN (
		   SELECT DISTINCT salesman_id 
		   FROM customer a 
		   WHERE NOT EXISTS (
	    SELECT * FROM customer b 
	    WHERE a.salesman_id=b.salesman_id 
	    AND a.cust_name<>b.cust_name));
		

18. From the following tables, write a SQL query to find the salespeople who deal the customers with more than one order. Return salesman_id, name, city and commission 

		SELECT * 
		FROM salesman a 
		WHERE EXISTS     
		   (SELECT * FROM customer b     
			WHERE a.salesman_id=b.salesman_id     
			 AND 1<             
				 (SELECT COUNT (*)              
				  FROM orders             
				  WHERE orders.customer_id =            
				  b.customer_id));
				  
				  
		OR ( below query writen by me)
		
		
		SELECT *
		FROM Salesman 
		WHERE salesman_id IN (
         SELECT salesman_id 
         FROM Orders 
         GROUP BY salesman_id  
         HAVING COUNT(customer_id) > 1)

		
		
		
19. From the following tables write a SQL query to find the salespeople who deal with those customers who live in the same city. Return salesman_id, name, city and commission.

		SELECT salesman_id, name, city , commission FROM Salesman  WHERE city = ANY (SELECT city FROM customer)
		
		
20. From the following tables write a SQL query to find salespeople whose place of residence matches any city where customers live. Return salesman_id, name, city and commission. 	

		SELECT * FROM Salesman 
		WHERE city IN (SELECT city FROM customer)

		